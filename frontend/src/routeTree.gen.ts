/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as ResetPasswordRouteImport } from './routes/reset-password'
import { Route as RecoverPasswordRouteImport } from './routes/recover-password'
import { Route as LoginRouteImport } from './routes/login'
import { Route as Layout_reportRouteImport } from './routes/_layout_report'
import { Route as Layout_reportIndexRouteImport } from './routes/_layout_report/index'
import { Route as Layout_reportCompanyInfoRouteImport } from './routes/_layout_report/company-info'
import { Route as Layout_reportReportTaskIdRouteImport } from './routes/_layout_report/report/$taskId'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const RecoverPasswordRoute = RecoverPasswordRouteImport.update({
  id: '/recover-password',
  path: '/recover-password',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const Layout_reportRoute = Layout_reportRouteImport.update({
  id: '/_layout_report',
  getParentRoute: () => rootRouteImport,
} as any)
const Layout_reportIndexRoute = Layout_reportIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => Layout_reportRoute,
} as any)
const Layout_reportCompanyInfoRoute =
  Layout_reportCompanyInfoRouteImport.update({
    id: '/company-info',
    path: '/company-info',
    getParentRoute: () => Layout_reportRoute,
  } as any)
const Layout_reportReportTaskIdRoute =
  Layout_reportReportTaskIdRouteImport.update({
    id: '/report/$taskId',
    path: '/report/$taskId',
    getParentRoute: () => Layout_reportRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/company-info': typeof Layout_reportCompanyInfoRoute
  '/': typeof Layout_reportIndexRoute
  '/report/$taskId': typeof Layout_reportReportTaskIdRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/company-info': typeof Layout_reportCompanyInfoRoute
  '/': typeof Layout_reportIndexRoute
  '/report/$taskId': typeof Layout_reportReportTaskIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_layout_report': typeof Layout_reportRouteWithChildren
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/_layout_report/company-info': typeof Layout_reportCompanyInfoRoute
  '/_layout_report/': typeof Layout_reportIndexRoute
  '/_layout_report/report/$taskId': typeof Layout_reportReportTaskIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/company-info'
    | '/'
    | '/report/$taskId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/company-info'
    | '/'
    | '/report/$taskId'
  id:
    | '__root__'
    | '/_layout_report'
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/_layout_report/company-info'
    | '/_layout_report/'
    | '/_layout_report/report/$taskId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  Layout_reportRoute: typeof Layout_reportRouteWithChildren
  LoginRoute: typeof LoginRoute
  RecoverPasswordRoute: typeof RecoverPasswordRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SignupRoute: typeof SignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recover-password': {
      id: '/recover-password'
      path: '/recover-password'
      fullPath: '/recover-password'
      preLoaderRoute: typeof RecoverPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout_report': {
      id: '/_layout_report'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof Layout_reportRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout_report/': {
      id: '/_layout_report/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof Layout_reportIndexRouteImport
      parentRoute: typeof Layout_reportRoute
    }
    '/_layout_report/company-info': {
      id: '/_layout_report/company-info'
      path: '/company-info'
      fullPath: '/company-info'
      preLoaderRoute: typeof Layout_reportCompanyInfoRouteImport
      parentRoute: typeof Layout_reportRoute
    }
    '/_layout_report/report/$taskId': {
      id: '/_layout_report/report/$taskId'
      path: '/report/$taskId'
      fullPath: '/report/$taskId'
      preLoaderRoute: typeof Layout_reportReportTaskIdRouteImport
      parentRoute: typeof Layout_reportRoute
    }
  }
}

interface Layout_reportRouteChildren {
  Layout_reportCompanyInfoRoute: typeof Layout_reportCompanyInfoRoute
  Layout_reportIndexRoute: typeof Layout_reportIndexRoute
  Layout_reportReportTaskIdRoute: typeof Layout_reportReportTaskIdRoute
}

const Layout_reportRouteChildren: Layout_reportRouteChildren = {
  Layout_reportCompanyInfoRoute: Layout_reportCompanyInfoRoute,
  Layout_reportIndexRoute: Layout_reportIndexRoute,
  Layout_reportReportTaskIdRoute: Layout_reportReportTaskIdRoute,
}

const Layout_reportRouteWithChildren = Layout_reportRoute._addFileChildren(
  Layout_reportRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  Layout_reportRoute: Layout_reportRouteWithChildren,
  LoginRoute: LoginRoute,
  RecoverPasswordRoute: RecoverPasswordRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SignupRoute: SignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
